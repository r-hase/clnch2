素早いキーボードランチャ [ CraftLaunch ] 使い方

■ 概要

CraftLaunchは、小さくて、素早く、間違えずに起動できる、キーボード主体
（マウスでも操作できます）のキーボードランチャです。


■ メインウインドウ

メインウインドウは次のようになっています。

        ┌────────────────────┐
        │┌─┐┌───────────────┐│
        ││  ││                              ││
        │└─┘└───────────────┘│
        └────────────────────┘
            ↑            ↑
          状態表示部      コマンド入力部



■ マウス操作

・状態表示部をダブルクリック ---- コマンド一覧リスト
・状態表示部を右クリック   ------ コンテキストメニュー
・状態表示部をドラッグ    ------- ウインドウ移動


■ キーボード操作

・文字キー  ------------------ コマンド入力
・↑↓      ------------------ コマンドの履歴呼び出し
                               リストの選択項目移動
・PageUp/PageDown ------------ リストの選択項目高速移動
・スペース(変更可能) --------- 次候補を選択
・Shift + スペース(変更可能) - 前候補を選択
・タブ(変更可能) ------------- 確定できる所まで確定
・Ctrl + i (変更可能) -------- 日付/時間 表示切替え

・Ctrl + C      -------------- クリップボードにコピー
・Ctrl + V      -------------- クリップボードから張り付け
・Ctrl + Del    -------------- 単語のカーソルより後を削除
・Ctrl + BS     -------------- 単語のカーソルより前を削除
・Ctrl + ←→   -------------- 単語区切り移動( NT/2000 のみ )
                               ( 95/98/Me ではスペース区切り移動 )
・Ctrl + A      -------------- すべて選択

・[ /\,.;]      -------------- 適当な位置まで確定してから挿入


■ 状態表示

CraftLaunchの現在の状態を表示します。
CraftLaunchには、次の状態があります。


    [--] : コマンド入力中です
           コマンドはヒットしていません

    [OK] : 入力されたコマンドがヒットしました
           この状態でリターンキーを押すと起動します

    [??] : リターンキーを押されたが、
           入力されたコマンドがヒットしませんでした

    [ER] : コマンド実行でエラーが発生

    [TM] : 時計を表示中です
           ※カスタマイズ可能です


■ コマンド入力部

コマンドを入力するほか、時計や年月日、ウインドウ位置などの情報を
表示する部分です。

コマンド入力部には、次のものを入力できます。

    ・ コマンド
    ・ Webアドレス
    ・ mailto:メールアドレス
    ・ コマンド直接入力 (設定で可能)


■ コマンド入力例

[TEXTEDIT] というコマンドを入力する例です。
例では [TEXTEDIT] のほかに [TERMINAL] というコマンドが登録されて
いると想定しています。


    Tを入力すると、

        ↓
      TERMINAL      Tで始まるコマンドのうち、優先順位が高いものが
       ~~~~~~~      選ばれ、残りの文字が補完される。
        ↓
      TERMINAL      Eを入力すると、TEで始まるコマンドのうち、優先
        ~~~~~~      順位が高いものが選ばれ、残りの文字が補完される。
        ↓
      TEXTEDIT      Xを入力すると、TEXで始まるコマンドのうち、優先
         ~~~~~      順位が高いものが選ばれ、残りの文字が補完される。
                    目的のコマンドが表示された。
        ↓

    リターンキーを押して起動


■ ファイル名補完

CraftLaunchでは、ユーザが登録したコマンド以外に、ファイル名を補完
することが出来ます。

[D:\data\01.txt] というファイルを、[EDIT] という登録された
コマンドで編集する例です。

      EDIT              EDITまで入力

             ↓
      EDIT;             引数区切り文字を入力

             ↓
      EDIT;D:\d         ファイルパスを途中まで入力すると

             ↓
      EDIT;D:\data\     ファイル名が補完される
               ~~~~
             ↓
      EDIT;D:\data\     TABを押して出来るだけ確定する

             ↓
      EDIT;D:\data\01   続いてファイル名を入力していく

             ↓
      EDIT;D:\data\01.txt   ファイル名が補完される
                     ~~~~   これですべての入力が完了した
            ↓

     リターンキーを押して起動


■ ファイラとの連係機能

以下のコマンドライン引数をつけて clnch.exe を呼び出すことで、すでに起動
している CraftLaunch をファイラ協調動作させることが可能です。


次のオプションを指定できます。オプションは  / か - ではじめます。

/ex : 最後の引数も実行します。

      デフォルトでは、最後の引数以外を実行し、最後の引数をコマンド入力部に
      格納して待機します。


/c? : カーソルを移動させます

    c0 - 先頭
    c1 - コマンド本体選択
    c2 - コマンドの後ろ
    c3 - 引数の先頭
    c4 - 引数を選択
    c5 - 引数の後ろ
    cA - 全体を選択

/x???? : ウインドウを一時的に移動させます
/y????

/w???? : ウインドウ横幅を一時的に変更します

/wr : ウインドウを一時的に移動させる座標を、直前にアクティブだった
      ウインドウ内での相対位置（％）で指定します

/close : CraftLaunch常駐させずに終了します
        ( 起動が少し遅くなりますが、使わないときのリソースの消費はゼロに
          なります )


    [ 例 ]

    ・clnch.exe  NETSCAPE   コマンド入力部に [ NETSCAPE ] と表示

    ・clnch.exe  /ex NETSCAPE
                            [ NETSCAPE ] を即実行

    ・clnch.exe  NETSCAPE  ""
                            (上と同じ意味) [ NETSCAPE ] を即実行

    ・clnch.exe  /c0 "C:\My Documents\text\idea.txt"

                            スペースを含むファイル名は "" でくくります
                            カーソルを先頭に移動させています。

                            先頭に EDIT; を追加して、ファイルを編集する
                            ときなどに便利

    ・clnch.exe  /ex NETSCAPE "!C:\Program Files\Internet Explorer\IEXPLORE.EXE"

                            ファイル名指定実効も可能
                            引数をスペースで区切って複数指定可能

    ・clnch.exe  /c0 /x100 /y200 "C:\doc\text\idea.txt"

                            CraftLaunchのウインドウを 一時的に、画面上の
                            ( 100,200 )に移動させます。

                            コマンド入力部に C:\doc\text\idea.txt と表示し、
                            カーソルを先頭において待機します。

    ・clnch.exe  /wr /x50 /y50 /w200
                            直前にアクティブだったウインドウの中央に
                            CraftLaunchのウインドウを移動させます。
                            同時に横幅を200にします。

                            ファイラ等からこのオプション付きで実行すると
                            ファイラの一部かであるかのように動作します。

    ・clnch.exe  "&CD;C:\doc\text" ";idea.txt"

                            カレントディレクトリを移動して、
                            C:\doc\text\idea.txt にアクセスします。

                            特殊コマンド【&CD】(後述)で、カレントディレクトリ
                            を移動し、コマンド入力部に ;idea.txt と表示し、
                            待機します。



■ 設定方法

CraftLaunch の動作の設定は、clnchopt.exeで行います。

次の項目が設定できます。


---【 表示位置 / サイズ 】------------------------------------------

                CraftLaunchの表示位置と、サイズを設定します。
                起動ごとにこの位置に表示されます。


---【 キー割り当て 】-----------------------------------------------

○ アクティブ :
                CraftLaunchのメインウインドウをアクティブにする
                ホットキーを設定します。

                Ctrl、Alt、Shift、Winは、同時に押す装飾キーです。

                ホットキーには、ほとんどすべてのキーを使うことが可能です。
                [無変換]や[CapsLock]など、押しやすい位置にあって、かつ
                普段は使わないキーをCraftLaunchのアクティブ化に当ててみて
                ください。


○ コマンドメニュー :
                登録されているコマンドを一覧表示するホットキーを
                設定します。

                Ctrl、Alt、Shift、Winは、同時に押す装飾キーです。

○ 次候補選択 :
○ 前候補選択 :
                入力済みの文字で始まるコマンドが複数ある場合は、
                ここで設定するキーを押すことで候補を切り替えます。

○ 共通部分確定 :
                ここで設定するキーで、すべての補完候補で共通の部分
                を確定します。

                たとえば、

                    ActivateEditor
                    ActivateTerminal
                    ActivateFiler
                    AFX

                というコマンドがある時、[ac] で このキーを押すと、
                [Activate] まで確定されます。


---【 コマンドの履歴 】---------------------------------------------

○ 履歴を残す数 :
                履歴の最大数です。
                最大数を越えたら、古いほうから削除されます。

○ Ｎ文字以下は残さない :
                指定した文字数以下のコマンドを、履歴に残さないようにします。

○ 履歴を次回に持ち越す :
                CraftLaunchの起動時と終了時に、clnch.hisファイルにアク
                セスして、前回のヒストリを再現するかどうか設定します。

○ 履歴からも補完 :
                登録されているコマンドと同様、
                履歴からも補完の候補を検索します。

○ 引数も履歴に残す :
                デフォルトでは、引数を除いた部分だけが履歴に追加されますが、
                チェックすると、引数も履歴に残ります。

○ 重複する履歴を削除 :
                履歴の追加の際に、すでに同じ履歴が登録されている場合は、
                古い履歴を消してから追加します。

○ 単純なコマンドは履歴に残さない :
                チェックすると、引数のない登録コマンドは、履歴に残しません。

○ 相対パスは絶対パスに変換 :
                チェックすると、相対パスを絶対パスに変換して履歴に残します。

○ 複数の引数は分解して残す :
                チェックすると、引数をひとつずつに分解して履歴に残します。

                ex)
                    EDIT;abc.txt;def.txt;123.txt
                         ↓
                    EDIT;abc.txt
                    EDIT;def.txt
                    EDIT;123.txt


                    abc.txt;def.txt;123.txt <Ctrl+E>
                       ↓
                    abc.txt
                    def.txt
                    123.txt


---【 ファイラとの連携 】-------------------------------------------

○ ファイラの枠より大きくならない :
                チェックすると、ファイラから呼び出されているモード中、
                CraftLaunch がファイラのウインドウの外に出ないように、
                自動的に位置サイズが調整されます。

○ フォーカスを失ったらモード終了 :
                チェックすると、ファイラ連携モード中、フォーカスを失うか、
                Escキー一発で、デフォルト位置に戻るようになります。


---【 空欄コマンド 】-----------------------------------------------

               【 空欄コマンドを使う 】が ON になっていると、
                何も入力しないでリターンしたときに指定した
                コマンドを実行することが出来ます。

                Ctrl、Alt、Shift、キーを、リターンの入力のときに
                押しておくことで、8 通りのコマンドを使い分けること
                が可能です。

                わざわざキーワードを入力したくないコマンドを登録
                しましょう。

                また、引数が入力されていて、コマンド本体が入力されていない
                状態でも、空欄コマンドを実行することが出来ます。

                Ex) [ ;C:\doc\text\idea.txt ] のときに Shift + Return

                このとき、空欄コマンドに引数を渡すことが出来るので便利です。


---【 ショートカットコマンド 】-------------------------------------

               【 ショートカットコマンドを使う 】が ON になっていると、
                Ctrl/Shift/Alt と 任意のキーの組み合わせで、任意の
                コマンドを起動することが出来ます。

                コマンド入力欄の文字は、コマンドへの引数として処理され
                ます。( 左端に引数区切り文字があっても自動的にトリミング )

                わざわざキーワードを入力したくないコマンドを登録
                しましょう。

                Ex)
                1, F12 のショートカットコマンドに [ &SetCommand ] を登録。
                2, [ BINEDIT ] を入力したところで、F12 を押す。
                3, [ &SetCommand ; BINEDIT ] と入力したときと同じ効果。


---【 引数 】-------------------------------------------------------

○ 以降を引数と見なす文字 :

                ここで設定する文字以降に引数を入力することで、コマンドに
                引数を渡すことが出来ます。

                デフォルトでは ";"(セミコロン) が設定されています。

                たとえば、テキストエディタをコマンドとして登録しておいて、
                編集したいファイルを引数として渡すことが可能です。

                Ex)
                    Name : EDIT
                    Link : c;\ols\edit\edit.exe
                    Arg  : -s

                というコマンドが登録されていて、コマンド入力部に、

                    EDIT;readme.txt

                と入力したときには、引数として、[ -s readme.txt ] が渡され
                ます。


---【 表示 】-------------------------------------------------------

○ 文字色 / 背景色 :
                コマンド入力欄の、文字 / 背景 の色、を設定できます。


○ 枠の太さ補正 :
                CraftLaunchの枠の太さをピクセル単位で変化させます。
                補足したい場合は -1, -2, -3、太くしたい場合は、1,2,3
                デフォルトは 0 です。


---【 フォント 】---------------------------------------------------

    コマンド入力部の表示フォントを、フォント名、サイズ(ポイント)で
    選択することができます。


---【 オプション 】-------------------------------------------------

○ キーワードを自動補完する :
                文字入力があるたびに補完候補を検索します。
                自動補完しない場合は、次候補/前候補選択キーを使って補完
                します。

○ 共通部分確定を自動的に :
                文字入力があるたびに共通部分確定を起動します。

                たとえば、

                    ActivateEditor
                    ActivateTerminal
                    ActivateFiler
                    AFX

                というコマンドがある時、[acf] と入力するだけで、
                [ActivateFiler] まで確定されます。

             ※ このオプションをONにすると、カーソル位置が勝手に変更
                されるので、【 タイプミスを受け付けない 】オプションを
                ON にすることを強く推奨します。

○ ディレクトリ名無しは補完しない
                ディレクトリ名のないファイル名の補完を抑制します。

                    c:\clnch\rea → c:\clnch\reareadme.txt
                    .\rea        → .\readme.txt
                    rea          → ×

             ※ ただし、ファイラのプラグインモードでは、このオプションが
                無効となります。

○ タイプミスを受け付けない :
                補完の候補が一つも無い状態になるようなキーの入力を、
                キャンセルします。

                &TypeMissCancelOff を実行するか、同じキーで3回以上連続して
                故意にタイプミスすると、一時的にこの機能が無効になります。

                このオプションをONにすると、http:// や mailto: 、
                そして ( !をつけないで )ファイル名指定実行も、キャンセル
                されてしまうようになります。

                http:// や mailto: という名前の空のコマンドを作るか、
                !mailto: というふうに、先頭に！をつけて回避してください。

○ 履歴から優先的に補完する :
                登録コマンドと、履歴の、優先順位を変更します。

                通常           : 登録コマンド > 履歴 > ファイル名
                チェックすると : 履歴 > 登録コマンド > ファイル名

○ 入力開始時、自動でIMEをOFF :
                CraftLaunchがアクティブになったときや、
                ホットキーが押されたときに、IMEをOFFにします。
                CraftLaunchでコマンドに半角文字しか使わない場合は
                チェックしましょう。

○ 非アクティブ時も入力内容を維持 :
                チェックすると、CraftLaunchがフォーカスを失っても、
                入力をリセットしません。

○ 先頭に"!"でファイル名指定実行 :
                入力の先頭が、"！"で始まる場合、
                以降をファイル名指定実行とみなします。

○ ウインドウを常に手前に表示 :
                CraftLaunchのウインドウが、他のウインドウに隠れなく
                なります。

○ タスクバーより手前に表示 :
                上の、ウインドウを常に手前に表示、オプションが On でも、
                タスクバーのプロパティで、常に手前に表示、をOnにすると、
                タスクバーをクリックしたりスタートメニューを出した時に、
                タスクバーに隠れてしまいますが、このオプションをOnにする
                と、CraftLaunchのウインドウが、タスクウインドウに隠れなく
                なります。

○ ウインドウを移動させない :
                ウインドウが移動するのを抑制します。

○ アクティブ化ホットキーはトグル :
                CraftLaunchがすでにアクティブの状態で、ホットキーを押すと、
                CraftLaunchを非アクティブ状態にします。

○ Escキーでウインドウを隠す :
                コマンド入力部分が空の状態でEscキーを押すと、
                CraftLaunchを非表示にします。

                表示するにはシステムトレイのアイコンをクリックするか、
                ホットキーを押します。

○ コマンド実行でウインドウを隠す :
                コマンドを実行した後、CraftLaunchを非表示にします。

                表示するにはシステムトレイのアイコンをクリックするか、
                ホットキーを押します。

○ 起動直後はウインドウ非表示 :
                CraftLaunchの起動直後、CraftLaunchを非表示にします

○ システムトレイのアイコン無し :
                システムトレイに、三角のアイコンが表示されなくなります。
                CraftLaunchの操作になれて、システムトレイのアイコンが
                邪魔になり始めたらOnにしてみましょう。

○ メニューはマウスカーソル位置 :
                コマンドメニューをウインドウ位置ではなく、
                マウスカーソルの位置に表示します。

○ 状態表示部を隠す :
                状態表示部を隠して、その分コマンド入力部を大きく表示します。

                状態表示部を隠すと、
                    ・状態表示部をダブルクリック ---- コマンド一覧メニュー
                    ・状態表示部を右クリック   ------ コンテキストメニュー
                    ・状態表示部をドラッグ    ------- ウインドウ移動
                ができなくなります。

○ 文字が収まるように大きくなる :
                コマンド入力中、テキストがコマンド入力部の枠に収まるように、
                CraftLaunchのウインドウが自動的に大きくなります。

○ 非アクティブのときも大きくなる :
                非アクティブ時も、文字が収まるサイズに大きくなります。


---【 ファイル名補完 】---------------------------------------------

○ ファイル名補完 :
                ファイル名を補完候補に入れます。

○ ファイル名を自動補完する :
                文字入力があるたびにファイル名を補完します。

○ ファイル名の共通部分を自動確定 :
                文字入力があるたびにファイル名の共通部分確定します。

○ パスの区切りに [ / ] を使う :
                ディレクトリの階層を区切る文字として、/ (スラッシュ)を使い
                ます。このオプションがONでも、OFFのときと同様に \ が使えます。

○ マスク :
                リストアップするファイルのマスクです。
                &SetFileMask命令で変更可能です。

○ 無視 :
                リストアップしないファイルのマスクです。
                &SetFileMask命令で変更可能です。

○ 実行可 :
                ！をつけなくても実行するファイルのマスクです。


---【 リスト 】-----------------------------------------------------

○ 最大表示項目数 :
                リストの最大表示項目数を設定します。
                項目数が多い場合はスクロールして選択することが出来ます。

○ 自動的にリストを表示する :
                通常の操作でリストを自動的に表示します。
                このオプションがOffの場合は、&PopList をショートカット
                に登録して表示させることが可能。


---【 情報表示機能 】-----------------------------------------------

                非アクティブ時に表示される情報を次の式を使って設定します。
                後述の置換文字列を使って、日付や時計を表示することが出来ます。

                (例) %m/%d(%a) →  06/24(Sat)


--------------------------------------------------------------------

■ コマンド登録方法

コマンドの登録は、clnchcmd.exeで行います。

コマンドの欄の左側には、コマンドの一覧が表示されており、
右側のボタンでそれを操作します。

    [New]   : 新しいコマンドを登録
    [Del]   : 選択中のコマンドを削除
    [Edit]  : 選択中のコマンドを編集
    [Up]    : 選択中のコマンドの優先順位を上げる
    [Down]  : 選択中のコマンドの優先順位を下げる

    [Copy]  : 選択中のコマンドの複製を作る
    [ - ]   : コマンド一覧メニューに区切り線を挿入します


CraftLaunchにファイルをドラッグ＆ドロップすることで、
簡単に登録することも出来ます。


■ コマンドとして登録できるもの

コマンドとして登録できるものは、以下の通りです。

○ アプリケーション :   アプリケーションを起動します。
○ データファイル   :   関連付けされたアプリケーションで開きます。
○ ディレクトリ     :   ディレクトリを開きます。
○ Web アドレス     :   普段使っているWebブラウザで開きます。
○ メールアドレス   :   メールを書きます。
○ 特殊コマンド     :   後述

○ コントロールパネル   : Link を control.exe、
                          Arg を 次のように設定します。

                     ┌─────────────────┐
                     │ アプリの追加と削除  appwiz.cpl   │
                     │ 画面                desk.cpl     │
                     │ フォルダオプション  folders      │
                     │ インターネット      inetcpl.cpl  │
                     │ 地域                intl.cpl     │
                     │ ゲームコントローラ  joy.cpl      │
                     │ マウス              main.cpl @0  │
                     │ キーボード          main.cpl @1  │
                     │ プリンタ            main.cpl @2  │
                     │ PCカード            main.cpl @4  │
                     │ マルチメディア      mmsys.cpl    │
                     │ サウンド            mmsys.cpl @1 │
                     │ モデム              modem.cpl    │
                     │ ネットワーク        netcpl.cpl   │
                     │ パスワード          password.cpl │
                     │ 電源の管理          powercfg.cpl │
                     │ システム            sysdm.cpl    │
                     │ ハードウェアの追加  sysdm.cpl @1 │
                     │ ダイヤル            telephon.cpl │
                     │ 日付と時刻          timedate.cpl │
                     └─────────────────┘

■ コマンドの編集ウインドウ

コマンドの登録や編集時には、コマンドの編集ウインドウが出現します。

    [Name]  :   コマンドの名前です。
                実際に入力する文字です。

    [Link]  :   コマンドの実体です。
                実行ファイルや、関連付けされているデータファイル、
                ディレクトリ、http://***、mailto:
                を指定できます。

    [Arg]   :   コマンドの起動時に渡すコマンドラインの引数です。
                通常は空欄でかまいません。

                コマンドラインの引数の設定方法に付いては、
                それぞれのアプリの説明を参照してください。

   [Folder] :   作業ディレクトリです。
                空欄にしておくと、CraftLaunchのカレントディレクトリが
                使われます。

    [Size]  ;   起動したウインドウのサイズです。
                通常か、最大化か、最小化を、選択します。

    [MENU]  :   チェックすると、コマンドをコマンドメニューに追加します

    [C][S]  :   Ctrl、Shift、キーを組み合わせて、コマンドを切り替える
                ことが出来ます。

[Open File] ボタンや、[OpenDirectory]ボタンを使って、
ファイルやディレクトリを簡単に指定することも出来ます。


■ 特殊コマンドについて

CraftLaunch自身によって処理されるコマンドがいくつか存在します。

これらのコマンドは、コマンド入力部に直接入力しても機能しますし、
コマンドの Link として登録して使っても、構いません。


&Exit           : CraftLaunchを終了します

&SetCommand     : CraftLaunchのコマンド設定ツールを起動します
                  引数としてコマンド名を渡すと、そのコマンドを編集します
                  引数としてファイルパスを渡すと、コマンドを新規登録します

                  &SetCommand                   # 設定ツールを起動
                  &SetCommand;EDITOR;MAILER     # EDITORとMAILERという
                                                  コマンドを編集
                  &SetCommand;c:\edit\edit.exe  # 新しいコマンドを登録

                  CraftLaunchにファイルをドラッグ＆ドロップすることで、
                  簡単に登録することも出来ます

&Option         : CraftLaunchの動作オプション設定ツールを起動します

&About          : CraftLaunchのバージョン情報を表示します

&ResetPosSize   : CraftLaunchをデフォルト位置に戻します

&SetCaret       : キャレットの位置、選択範囲を変更します
                  &SetCaret ; <位置1>, <位置2>

                  特殊な位置指定：
                  -1 : 末尾
                  -2 : 引数の先頭
                  -3 : コマンド本体の末尾
                  -4 : 選択範囲の先頭
                  -5 : 選択範囲の末尾

                  ex)
                  &SetCaret ; 1      # 一文字目の後にキャレットを置く
                  &SetCaret ; 1,2    # 一文字目から2文字目までを選択
                  &SetCaret ; -1     # 末尾にキャレットを置く
                  &SetCaret ; -2,-1  # 引数部分を選択
                  &SetCaret ; 0,-3   # コマンド本体を選択
                  &SetCaret ; -5     # 選択範囲を確定

&UseAsArg       : 先頭に引数区切り文字を付加して、カーソルを先頭に移動

&Escape         : Escキー相当の動作をします

&Delete         : Deleteキー相当の動作をします
&Backspace      : Backspaceキー相当の動作をします
&DeleteWord     : Ctrl-Deleteキー相当の動作をします
&BackspaceWord  : Ctrl-Backspaceキー相当の動作をします

&PopList        : 補完候補リストを表示します
                  ショートカットに登録して使ってください

&CloseList      : リストを閉じます

&PopCommandList : 登録コマンドだけの補完候補リストを表示します
&PopFileList    : ファイル名だけの補完候補リストを表示します
&PopHistoryList : 履歴だけの補完候補リストを表示します

&FilterHistory  : 引数で渡した文字列を含む履歴をリスト表示します

                  Ex)   &FilterHistory ; .mp3
                        ( 以前開いたMP3ファイルをリスト )

                  ショートカットに登録して使うと便利かもしれません

                  Ex)   &FilterHistory を Ctrl+Shift+F に登録しておき
                        .mp3 (Ctrl+Shift+Fを押す)


&ListIntoDir    : 現在入力中のディレクトリの中をリストします
                  ショートカットに登録して使ってください

&ListOuttoDir   : 現在入力中のディレクトリの親ディレクトリをリストします
                  ショートカットに登録して使ってください

&PopCommandMenu : コマンド一覧メニューを表示します

&RemoveHistory  : 引数で渡した履歴を削除します

                  Ex)   &RemoveHistory;ActivateViewer

&RemoveHistoryAll : 履歴をすべて削除します

&AutoCompleteOff : 一時的に自動補完をOFFにします
                   ショートカットに登録して使ってください

&AutoCompleteOn : &AutoCompleteOff のモードを解除します

&AutoFixOff     : 一時的に自動確定をOFFにします
                  ショートカットに登録して使ってください

&AutoFixOn      : &AutoFixOff のモードを解除します

&TypeMissCancelOff : 一時的にタイプミスを許可するモードにします
                     ショートカットに登録して使ってください

&TypeMissCancelOn : &TypeMissCancelOff のモードを解除します

&AutoListOff    : 一時的に自動リスト表示をOFFにします
                  ショートカットに登録して使ってください

&AutoListOn     : &AutoListOff のモードを解除します

&DriveLowerCase : 補完候補のドライブ名を小文字でリストアップするモードにします

&SubCommand     : コマンドを連続実行します。Argにカンマで区切ります。

                  ex) Link : &SubCommand
                      Arg  : CONNECT, MAIL, NETSCAPE

                  カンマを含むコマンドはダブルクォートで括ってください。

                  ex) Name: NotepadExecAndClose
                      Link: &SubCommand
                      Arg : !notepad , "&WaitWindow;ﾒﾓ帳,Notepad,0" ,
                                         "&WinMessage;ﾒﾓ帳,Notepad,16,0,0"


&SubCommandOr   : コマンドを連続実行します。Argにカンマで区切ります。

                  コマンドが成功したら後続の命令をスキップします。
                  つまり、コマンドが成功するまで順番に実行します。

                  ex) Link : &SubCommandOr
                      Arg  : ActivateFiler , Filer

                     ( ファイラが起動していればそれをアクティブ化、
                       起動していなかったら起動、といったことが可能 )


&SubCommandForce: コマンドを連続実行します。Argにカンマで区切ります。

                  コマンドが失敗しても後続のコマンドまで実行します。

                  ex) Link : &SubCommandForce
                      Arg  : ActivateFiler , ActivateEditor , ActivateTerm

                     ( ファイラ、エディタ、ターミナル、があれば、アクティブ
                       化する )


&OpenFiles      : ファイルを開きます。複数可。Argにスペースで区切ります。

                  &OpenFilesをショートカットに割り当てることによって、
                  [ 不明入力でファイル名指定実行 ] や [ 先頭に"!"でファイル
                  名指定実行 ] が OFFのときでも、ファイルを開くことが出来ます。

&WinActivate    : ウインドウをタイトルとクラスで識別して、アクティブ化します

                  Ex)   Name: ACTIVATE_EDITOR（※お好みで）
                        Link: &WinActivate
                        Arg : ﾒﾓ帳, Notepad

                  Argの型 : <タイトル>,<クラス>

                  タイトルは一部が一致すれば認識されます
                  ( 例えば AbcFiler ver 1.23 は AbcFiler と書いておくだけで
                    OK )
                  クラスは完全一致する必要があります。

                  タイトルとクラスの内、片方は省略可能です
                  ( ﾒﾓ帳, Notepad は、 ﾒﾓ帳, でも , Notepad でも可 )

&WinMessage     : ウインドウをタイトルとクラスで識別して、メッセージを送ります
                  （最初にみつかったウインドウにのみ）

                  Ex)   Name: CloseNotepad（※お好みで）
                        Link: &WinMessage
                        Arg : ﾒﾓ帳, Notepad, 16, 0, 0

                  Argの型 : <タイトル>,<クラス>,<MessageID>,<Param1>,<Param2>

                  タイトルは一部が一致すれば認識されます
                  ( 例えば AbcFiler ver 1.23 は AbcFiler と書いておくだけで OK )
                  クラスは完全一致する必要があります。

                  タイトルとクラスの内、片方は省略可能です
                  ( ﾒﾓ帳, Notepad は、 ﾒﾓ帳, でも , Notepad でも可 )


&WinMessageAll  : ウインドウをタイトルとクラスで識別して、メッセージを送ります
                  （条件に当てはまるすべてのウインドウ）

                  ex) Name : CloseIEAll（※お好みで）
                      Link : &WinMessageAll
                      Arg  : Microsoft Internet Explorer, IEFrame, 16, 0, 0


&SendText       : ウインドウにキーストロークメッセージを送信します。

                  ex) Name : PASSWD
                      Link : &SendText
                      Arg  : ﾊﾟｽﾜｰﾄﾞ,,3, ABCdef123\n

                  Argの型 : <タイトル>,<クラス>,<子ウインドウ番号>,<送信文字列>

                  子ウインドウ番号は WinDowse(http://www.greatis.com/) という
                  ソフトを使って調べることができます。

                  送信文字列には次のエスケープシーケンスが使えます。

                      \n : リターンキー
                      \\ : [ \ ]文字自身


&Key            : 擬似キーストロークを生成します。
&KeyDown        : &SendTextとは違って、特定のウインドウにではなく、システム全体
&KeyUp          : へのキー操作のシミュレーションが可能です

                  型) &Key* ; <仮想キーコード>

                  ex) Name : PopStartMenu
                      Link : &SubCommand
                      Arg  : &KeyDown;17, &Key;27, &KeyUp;17

                          &KeyDown;17  Ctrlキーを押す
                          &Key;27      Escキーを押して離す
                          &KeyUp;17    Ctrlキーを離す


&Sleep          : コマンドの実行を指定した時間だけ止めます

                  型) &Sleep ; <待ち時間 ms>


&WaitWindow     : タイトルとクラスで指定されたウインドウが出現するのを待ちます

                  ex)   Name : WaitNotepad（※お好みで）
                        Link : &WaitWindow
                        Arg  : ﾒﾓ帳, Notepad, 500

                  Argの型 : <タイトル>,<クラス>,<最大待ち時間 ms>

                  最大待ち時間を 0 に (または省略) すると無限に待ちます

                  ESCキーで待ちを抜けます

                  起動 → 出現待ち → 操作メッセージ
                  といった使い方をします


&SetFileMask    : ファイルマスクを変更します
                  ショートカットに登録することで、ファイル名補完入力中も
                  ファイルマスクを変更することが可能です

                  ex) &SetFileMask ; *.c;*.cpp;*.h
                  ex) &SetFileMask ; *.* , *.bak;*.dll;*.lnk
                  ex) &SetFileMask ;  , *.*

&CD             : CraftLaunchのカレントディレクトリを変更します
                  ex) &CD;C:\WINDOWS\SYSTEM

                  CraftLaunchのコマンドの Folder の項目を、空欄にしておくと、
                  CraftLaunchのカレントディレクトリが、アプリに引き継がれます。
                  ( 一部、そう動作しないアプリがあるようです )

                  ファイラから CraftLaunch にファイル名を渡すときに、最初に
                  カレントディレクトリを設定すると、ファイル名にパスを含めなく
                  て済むので、便利です。

&TextOut        : 引数で与えられた文字列を表示します
                  置換文字列を埋め込むことが可能です
                  ex)   &TextOut;今日の日付：%Y/%m/%d(%a)

&ChangeInfo     : 待機時に表示する文字列を、引数で与えられたものに切り替えます
                  置換文字列を埋め込むことが可能です
                  ex)   &ChangeInfo; " %%Y/%%m/%%d(%%a) ", DT

&HiddenCommand  : 任意のコマンドを予約しておき、次回の Enter時のコマンド入力部
                  の文字列全体をそのコマンドの引数として実行するモードに移行し
                  ます。

                  ex) &HiddenCommand ; Viewer
                      c:\picture\family\20011223\001.jpg
                                    ↓
                      Viewer ; c:\picture\family\20011223\001.jpg

&ClearHiddenCommand : &HiddenCommand で予約したコマンドを無効にして、通常モード
                      に移行します


&SetValue       : 変数を登録/更新します
&KillValue      : 変数を削除します

                  ex) &SetValue ; Key, Value
                      Key という変数に Value という値をセットします

                  この命令は、主にプラグインからの情報受信に使用されますので、
                  ユーザは気にする必要はありません。

&PopLog         : &SubCommandで実行されたものも含むコマンド実行ログをリスト
                  表示します。&SubCommandなどで複雑になったコマンドを調整する
                  のに便利です。
                  ログは新しい100行が保持されます。


■ コマンドの実行時オプションについて

コマンドの末尾に [ ] に挟んでオプションを付加することが可能です。
[,](カンマ) で区切って、複数のオプションを指定することも出来ます。


Shift           :
S               : 登録コマンドを、Shiftキーを押しながら実行したことにします。

Ctrl            :
C               : 登録コマンドを、Ctrlキーを押しながら実行したことにします。



■ 置換文字列について

次の表にある文字列はコマンド実行時に適宜 置換されます。

    ┌───────────────────────────────────┐
    │  %a 曜日の省略名                                                     │
    │  %A 曜日の正式名                                                     │
    │  %b 月の省略名                                                       │
    │  %B 月の正式名                                                       │
    │  %c ロケールに応じた日付と時間の表現                                 │
    │  %d 10 進数で表す月の日付 (01〜31)                                   │
    │  %H 24 時間表記の時間 (00〜23)                                       │
    │  %I 12 時間表記の時間 (01〜12)                                       │
    │  %j 10 進数で表す年頭からの日数 (001〜366)                           │
    │  %k 曜日の日本語名 (日月火水木金土)                                  │
    │  %m 10 進数で表す月 (01〜12)                                         │
    │  %M 10 進数で表す分 (00〜59)                                         │
    │  %p 現在のロケールの AM/PM                                           │
    │  %S 10 進数で表す秒 (00〜59)                                         │
    │  %U 10 進数で表す週の通し番号。日曜日を週の最初の日とする (00〜51)。 │
    │  %w 10 進数で表す曜日。日曜日を 0 とする (0〜6)。                    │
    │  %W 10 進数で表す週の通し番号。月曜日を週の最初の日とする (00〜51)。 │
    │  %x 現在のロケールの日付表示                                         │
    │  %X 現在のロケールの時刻表示                                         │
    │  %y 10 進数で表す西暦の下 2 桁 (00〜99)                              │
    │  %Y 10 進数で表す 4 桁の西暦                                         │
    │  %z 時間帯の名前またはその省略名                                     │
    │  %% パーセント記号                                                   │
    │                                                                      │
    │  %cb   クリップボードの文字列                                        │
    │  %pwd  カレントディレクトリ                                          │
    │  %arg  入力の引数部分                                                │
    │  %arg2 入力の引数部分の、'/' を '\' に置換したもの                   │
    │  %AcceptMask  現在のファイルマスク(受け付けるほう)                   │
    │  %IgnoreMask  現在のファイルマスク(無視するほう)                     │
    │  %null 空欄                                                          │
    └───────────────────────────────────┘

    ┌[ 引数をとるもの ]──────────────────────────┐
    │                                                                      │
    │  %var[<内部変数名>]         内部変数                                 │
    │                                                                      │
    │  %env[<環境変数名>]         環境変数                                 │
    │                                                                      │
    │  %Link[<登録コマンド名>]    登録コマンドのLink先                     │
    │                             登録コマンド名以外が渡された時は、       │
    │                             そのまま [ ] 内の文字列に置換されます    │
    │                                                                      │
    │  %LinkDir[<登録コマンド名>] 登録コマンドのLink先のあるディレクトリ   │
    │                             登録コマンド名以外が渡された時は、       │
    │                             そのまま [ ] 内の文字列に置換されます    │
    │                                                                      │
    │  %FullPath[<ファイルパス>]  ファイルパスを絶対パスに変換したもの     │
    │                                                                      │
    └───────────────────────────────────┘


■ メッセージ送信機能

&WinMessage と &WinMessageAll は、CraftLaunchから他のアプリケーション
を素早く操作するための機能です。同梱の tips.txt に使用例を記載しています。

